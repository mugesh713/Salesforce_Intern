////INTERN DAY 1
# **Understanding the Salesforce Data Platform: Core Concepts**

Here's a structured breakdown of the core concepts from the Salesforce Data Platform unit in an easy-to-understand manner:

---

## **1. What is Salesforce?**
- **Beyond CRM**: Salesforce is not just a CRM (Customer Relationship Management) tool—it’s a **platform** that helps businesses manage sales, customer service, marketing, collaboration, and more.
- **Key Features**:
  - **Sales & Leads**: Track prospects and deals.
  - **Customer Support**: Manage cases and communities.
  - **Mobile & Collaboration**: Work on-the-go with Slack integration.
  - **Marketing Automation**: Manage customer journeys.
  - **AI & Automation**: Use Einstein AI for smarter decisions.
  - **Data Integration**: Bring in data from multiple sources with **Data Cloud**.

---

## **2. The Salesforce Platform**
- Think of Salesforce as a **model house**—it comes with standard features, but you can **customize** it to fit your business needs.
- **Two Ways to Customize**:
  1. **No-Code (Declarative)**: Drag-and-drop tools (e.g., Flow Builder, App Builder).
  2. **Programmatic**: Coding with Apex, Lightning Web Components, etc.

---

## **3. Key Salesforce Terms**
| Term | Definition | Example |
|------|-----------|---------|
| **Org (Organization)** | Your company’s Salesforce instance. | Dreamhouse Realty’s Salesforce setup. |
| **App** | A collection of objects & tools for a business process. | Dreamhouse Realty App. |
| **Object** | A database table storing specific data. | `Property`, `Contact`, `Account`. |
| **Record** | A single row (entry) in an object. | A specific house listing. |
| **Field** | A column (attribute) in an object. | `Price`, `Address`, `Prequalified?`. |

---

## **4. Dreamhouse Scenario (Example)**
- **Dreamhouse Realty** is a fictional company using Salesforce to:
  - Track properties (custom `Property` object).
  - Manage clients (`Contact` object).
  - Automate workflows (e.g., marking clients as "Prequalified").
- **Key People**:
  - **Michelle** (Broker): Uses Salesforce to manage home sales.
  - **D’Angelo** (Admin): Customizes Salesforce for Dreamhouse.

---

## **5. Hands-On: Trailhead Playground**
- A **safe, free environment** to practice Salesforce skills.
- **Steps to Set Up**:
  1. **Create a Playground** (if new to Trailhead).
  2. **Install Dreamhouse App** (using Package ID: `04tKY000000LOv6YAG`).
  3. **Import Sample Data** (properties, contacts, brokers).

---

## **6. No-Code Customization Example**
**Goal**: Add a "Prequalified?" checkbox to the `Contact` object.  
**Steps**:
1. Go to **Setup** → **Object Manager** → **Contact**.
2. Click **Fields & Relationships** → **New**.
3. Select **Checkbox** → Name it "Prequalified?" → Save.
4. The field now appears on Contact records.

**Result**: Brokers can now track prequalified buyers without coding!

---

## **7. Key Takeaways**
- Salesforce is a **flexible platform**, not just CRM software.
- **No-code tools** let admins customize Salesforce easily.
- **Objects, records, and fields** are the building blocks.
- **Trailhead Playground** is where you practice safely.

////INTERN DAY 2


# **Salesforce Platform Use Cases & Architecture: Core Concepts**

Here’s a structured breakdown of the key learnings in an easy-to-understand format:

---

## **1. High-Impact, Low-Effort Use Cases**
The Salesforce Platform helps businesses **automate repetitive tasks** and **streamline workflows** with minimal effort.  
**Example (Dreamhouse Realty):**  
- **Problem**: Brokers manually enter property listings → inconsistent data.  
- **Solution**:  
  - **Flow Builder**: Creates a guided form for standardized property entries.  
  - **Prompt Builder (AI)**: Generates personalized emails for buyers automatically.  

**Look for processes that:**  
✔ Heavy email collaboration  
✔ Reliance on spreadsheets  
✔ Manual, repetitive steps  
✔ Impact few departments (easier to implement)  

---

## **2. Multi-Department Use Cases**
Salesforce isn’t just for sales—it can be customized for **HR, IT, Finance, and more**.  

| **Department** | **Use Case** | **Tools Used** |
|--------------|------------|--------------|
| **HR** | Automate hiring, onboarding, equipment requests | Flow Builder, AI prompts |
| **IT** | Manage support tickets, knowledge base, hardware tracking | Cases, Dashboards, Flows |
| **Finance** | Budget tracking, contract management, pricing | Custom objects, Reports |
| **Supply Chain** | Vendor management, procurement, logistics | Data Cloud, APIs |

**Example (HR at Dreamhouse):**  
- **Problem**: Hundreds of job applications, manual tracking.  
- **Solution**:  
  - Custom app for job openings & applicant tracking.  
  - AI-generated summaries of candidates.  

---

## **3. Salesforce Architecture: How It Works**
Salesforce is built on a **secure, multi-layered cloud architecture**.  

### **Key Components:**
1. **Multitenant Cloud**  
   - Like an **apartment building**: Many companies share infrastructure but have separate, secure spaces.  
   - Benefits: Automatic updates, no hardware maintenance.  

2. **Trust & Security**  
   - **trust.salesforce.com** → Check system status, security updates.  
   - **Einstein Trust Layer** → Ensures AI safety (no data leaks).  

3. **Data Cloud (The Game-Changer)**  
   - A **"data lakehouse"** (not a traditional database).  
   - **What it does:**  
     - Connects data from **any source** (inside/outside Salesforce).  
     - Powers **AI-driven insights** (e.g., real-time buyer activity).  
     - No data duplication (**zero-copy integration**).  

4. **Metadata ("Data About Data")**  
   - Defines **structure** (objects, fields, layouts).  
   - Example:  
     - **Property Object** → Fields = Price, Address (metadata).  
     - Actual listings (Boston, $500K) = **data**.  

5. **API (Application Programming Interface)**  
   - Lets Salesforce **connect with other apps** (like USB ports for software).  
   - Every field/object has an **API name** (used in automations, integrations).  

---

## **4. Why This Matters?**
✅ **Speed**: Build fast with **no-code tools** (Flow Builder, AI).  
✅ **Flexibility**: Works for **any department** (Sales, HR, IT).  
✅ **Security**: Enterprise-grade **cloud trust**.  
✅ **AI & Data**: **Data Cloud** + **Einstein AI** = Smarter decisions.  

# **Navigating Salesforce Setup & AppExchange: Core Concepts**

Here's a structured breakdown of key learnings in an easy-to-understand format:

---

## **1. Salesforce Setup: Your Admin Control Center**
Setup is where admins **configure, customize, and manage** their Salesforce org.

### **How to Access Setup**
- Click the **gear icon (⚙️)** → Select **Setup**.

### **Key Areas in Setup**
| **Section** | **Purpose** | **Key Features** |
|------------|------------|-----------------|
| **Object Manager** | Manage standard/custom objects | Create fields, relationships, validation rules |
| **Administration** | User & data management | Add users, set permissions, import data |
| **Platform Tools** | Customization & development | Build apps, automate flows, manage code |
| **Settings** | Org security & company info | Business hours, login history, audit trail |

### **Top 5 Must-Know Setup Pages**
1. **Company Information**  
   - View org ID, licensing, storage limits.
2. **Users**  
   - Create/reset users, freeze accounts.
3. **Profiles**  
   - Control user permissions.
4. **Setup Audit Trail**  
   - Track org changes (who made them & when).
5. **Login History**  
   - Monitor security & user activity.

### **Quick Find Box**
- Can’t find something? **Search directly** (e.g., "Permission Sets").

---

## **2. AppExchange: Salesforce’s App Marketplace**
AppExchange is like the **"App Store" for Salesforce**—offering **3rd-party apps** to extend functionality.

### **AppExchange Strategy (Before Installing)**
1. **Identify Needs**  
   - Which departments need apps? (HR, Sales, IT?)  
2. **Ask Stakeholders**  
   - *"What problem are we solving?"*  
   - *"What’s the budget & timeline?"*  
3. **Test in Sandbox First**  
   - Avoid breaking production!  
4. **Evaluate & Deploy**  
   - Get user feedback before full rollout.

### **How to Install an App**
1. **Find an App** (e.g., SMS integration for Marketing Cloud).  
2. **Check Requirements** (e.g., "Must have Digital Engagement enabled").  
3. **Click "Get It Now"** → Follow installation wizard.  
4. **Choose Installation Location**  
   - Sandbox (recommended) or Production.  
5. **Set Permissions**  
   - Admins only? Specific profiles? All users?  

### **Finding Installed Apps**
- Go to **Setup** → Quick Find → **"Installed Packages"**.  
- Click the package name → **"View Components"** to see details.  

---

## **3. Pro Tips**
✅ **Salesforce Labs** – Free, open-source apps (great for learning).  
✅ **Sandbox First** – Always test apps before production.  
✅ **Monitor Changes** – Use **Setup Audit Trail** to track modifications.  

////INTER DAY 3
# **Optimizing Customer Data with Salesforce Objects & Relationships**

Here's a structured breakdown of key concepts from these Salesforce Trailhead modules:

---

## **1. Understanding Objects in Salesforce**
**Objects = Database Tables** that store your business data.

### **Types of Objects**
| Type | Description | Example |
|------|------------|---------|
| **Standard Objects** | Pre-built by Salesforce | `Account`, `Contact`, `Opportunity` |
| **Custom Objects** | Created for unique business needs | `Property`, `Favorite`, `Offer` |
| **External Objects** | Connect to external data sources | API-linked inventory data |
| **BigObjects** | Store massive, rarely accessed data | Historical transaction logs |

### **Key Components**
- **Fields** = Columns (e.g., `Price`, `Address`)  
- **Records** = Rows (e.g., a specific house listing)  

---

## **2. Creating Custom Objects & Fields**
### **Steps to Create a Custom Object (e.g., "Property")**
1. Go to **Setup** → **Object Manager** → **Create** → **Custom Object**.  
2. Enter:  
   - **Label**: `Property`  
   - **Plural Label**: `Properties`  
3. Enable **"Launch New Custom Tab"** (for easy access).  
4. **Save**.  

### **Adding Custom Fields (e.g., "Price")**
1. In **Object Manager**, select your object → **Fields & Relationships**.  
2. Click **New** → Choose **Data Type** (e.g., `Currency`).  
3. Configure:  
   - **Label**: `Price`  
   - **Description**: "The listed sale price of the home."  
   - **Required**: ✔️ (to enforce data entry).  
4. **Save**.  

**Note**: Custom fields end with `__c` (e.g., `Price__c`).  

---

## **3. Object Relationships**
Relationships link objects to show connections (e.g., linking a `Property` to its `Offers`).

### **Types of Relationships**
| Type | Description | Use Case | Behavior |
|------|------------|----------|----------|
| **Lookup** | Casual link between objects | `Contact` ↔ `Account` | Deleting master doesn’t delete child. |
| **Master-Detail** | Tight dependency | `Property` (Master) ↔ `Offer` (Detail) | Deleting master deletes all child records. |
| **Hierarchical** | Special lookup for `User` objects | Org chart (Manager ↔ Employee) | Only available on `User` object. |

### **Creating a Relationship (Example: `Favorite` Object)**
1. **Create a Lookup to `Contact`** (who favorited the property).  
   - **Setup** → **Object Manager** → `Favorite` → **Fields & Relationships** → **New** → `Lookup Relationship` → Select `Contact`.  
2. **Create a Master-Detail to `Property`** (the favorited home).  
   - Same steps, but choose `Master-Detail` → Select `Property`.  

**Result**: On a `Property` record, you’ll see related `Favorites` under the **Related** tab.  

---

## **4. Visualizing with Schema Builder**
**Schema Builder** is a drag-and-drop tool to design and view your data model.  

### **How to Use It**
1. **Access**: **Setup** → Quick Find → "Schema Builder".  
2. **Add Objects**:  
   - Clear all → Select `Contact`, `Property`, `Favorite`, `Offer`.  
   - Click **Auto-Layout** to organize.  
3. **Create Objects/Fields Visually**:  
   - Drag **Object** from the **Elements** tab → Configure → Save.  
   - Drag **Field** onto an object → Set type (e.g., `Currency`) → Save.  

**Benefits**:  
- Great for explaining data flows to teams.  
- Edit objects/fields directly in the visual interface.  

---

## **5. Best Practices**
✅ **Descriptive Naming**: Avoid vague names like `Property2`—use `Condominium` instead.  
✅ **Field Descriptions**: Explain the purpose (e.g., "Price: The home’s listing price").  
✅ **Required Fields**: Enforce critical data (e.g., `Price` on `Property`).  
✅ **Test in Sandbox**: Before deploying to production.  

//INTERN DAY 4
# **Mastering Data Import & Export in Salesforce**

Here's a comprehensive yet easy-to-understand breakdown of importing and exporting data in Salesforce:

---

## **1. Importing Data into Salesforce**
### **Two Main Methods**

| Method | Best For | Max Records | Key Features |
|--------|----------|------------|--------------|
| **Data Import Wizard** | Simple, UI-based imports | 50,000 | Built into Setup, supports standard & custom objects |
| **Data Loader** | Large, automated imports | 150M+ | CLI support, Bulk API, works with all objects |

### **When to Use Each**
- **Data Import Wizard** → Small imports (<50k), standard objects (Accounts, Contacts, Leads).  
- **Data Loader** → Large imports, custom objects, automation (e.g., nightly syncs).  

---

### **Preparing Data for Import**
Before importing, **clean and structure** your `.csv` file:
- Remove duplicates & fix errors.  
- Match column headers to Salesforce field names.  
- Format data correctly (e.g., dates as `MM/DD/YYYY`).  
- **Test with a small file first!**  

#### **Key Data Formatting Rules**
- **Checkboxes**: `1` (True) / `0` (False).  
- **Picklists**: Must match existing values (or use defaults).  
- **Multi-Select Picklists**: Separate values with `;`.  
- **Date/Time**: Match your org’s locale settings.  

---

### **Step-by-Step: Data Import Wizard**
1. **Go to Setup** → Quick Find → **"Data Import Wizard"**.  
2. **Choose Object** (e.g., Accounts, Contacts, or Custom Objects).  
3. **Select Action**:  
   - **Add new records**  
   - **Update existing records** (match by ID/email)  
   - **Add & update**  
4. **Upload `.csv`** (drag & drop or browse).  
5. **Map Fields**:  
   - Salesforce auto-maps matching headers.  
   - Manually map unmapped fields (e.g., `Company` → `Account Name`).  
6. **Review & Start Import**.  
7. **Check Status**:  
   - **Setup** → "Bulk Data Load Jobs" → View progress.  
   - Receive email confirmation when done.  

---

## **2. Exporting Data from Salesforce**
### **Two Main Methods**
| Method | Best For | Frequency | Key Features |
|--------|----------|-----------|--------------|
| **Data Export Service** | Manual/scheduled backups | Every 7 (weekly) or 29 (monthly) days | Built into Setup, exports `.zip` of `.csv` files |
| **Data Loader** | Large, automated exports | Unlimited | CLI/API support, granular control |

---

### **Step-by-Step: Data Export Service**
1. **Go to Setup** → Quick Find → **"Data Export"**.  
2. **Choose**:  
   - **Export Now** (one-time)  
   - **Schedule Export** (automatic weekly/monthly)  
3. **Select Options**:  
   - Encoding (default: UTF-8).  
   - Include attachments/files (optional).  
   - Replace line breaks with spaces (for compatibility).  
4. **Select Data**:  
   - **"Include all data"** (full backup) **or**  
   - Select specific objects (e.g., Accounts, Contacts).  
5. **Start Export** or **Save Schedule**.  
6. **Download**:  
   - Receive email with `.zip` link (expires in 48 hours).  

---

## **3. Pro Tips**
✅ **Backup Before Major Changes**: Always export before mass updates/deletions.  
✅ **Use Sandbox for Testing**: Test imports in a sandbox first.  
✅ **Automate with Data Loader**: Schedule recurring exports/imports via CLI.  
✅ **Monitor Storage**: Large attachments/files increase storage usage.  

///INTERN DAY 5

Here's a clear, **basic concept** for each Salesforce customization topic:

---

### **1. Lightning Apps**  
**What**: Custom containers for tabs, tools, and features tailored to different teams (Sales, Service, etc.).  
**Key Idea**: Group related tabs/items into role-specific apps (e.g., "Sales App" for reps).  

---

### **2. List Views**  
**What**: Filtered lists of records (e.g., "My Open Opportunities").  
**Key Idea**: Create saved filters (e.g., "All High-Priority Cases") to avoid repetitive searches.  

---

### **3. Compact Layouts**  
**What**: Summaries of key record details (shown in mobile/search results).  
**Key Idea**: Highlight 3–5 critical fields (e.g., "Amount," "Close Date" for Opportunities).  

---

### **4. Record Pages**  
**What**: Customizable record detail pages.  
**Key Idea**: Use tabs, sections, and dynamic components to organize fields (e.g., "Details," "Related" tabs).  

---

### **5. Custom Buttons/Links**  
**What**: Buttons that trigger actions (e.g., "Generate PDF," "Open Map").  
**Key Idea**: Add shortcuts for common tasks (e.g., "Email Customer" button on Contact pages).  

---

### **6. Quick Actions**  
**What**: One-click tools to log calls, create tasks, or update records.  
**Key Idea**: Speed up workflows (e.g., "Log a Call" action on Lead pages).  

---

### **Core Principle**  
All these features aim to:  
- **Simplify navigation** (e.g., role-specific apps).  
- **Reduce clicks** (e.g., quick actions).  
- **Highlight what matters** (e.g., compact layouts).  

///INTERN DAY 6

# **User Engagement in Salesforce: A Complete Guide**

## **1. Understanding User Engagement**
User engagement refers to the strategies and tools used to onboard, guide, and assist users within Salesforce. It ensures users:
- **Discover** features effectively  
- **Adopt** new functionalities  
- **Troubleshoot** issues  
- **Learn** advanced concepts  

### **Key Scenarios for User Engagement**
| Scenario | Description | Example |
|----------|------------|---------|
| **Onboarding** | Help new users get started | Welcome prompts, setup guides |
| **Feature Adoption** | Encourage use of new features | Prompts for new tools |
| **Troubleshooting** | Provide quick help | Field-level tips |
| **Deeper Learning** | Teach advanced concepts | Walkthroughs, tutorials |

---

## **2. User Engagement Components**
Salesforce offers multiple ways to engage users:

### **Declarative (No-Code) Components**
| Component | Best For | Example |
|-----------|----------|---------|
| **Guidance Center** | Central help hub | Trailhead modules, help docs |
| **Prompts** | Short, actionable messages | "Try this new feature!" |
| **Field-Level Help** | Explain specific fields | "This field tracks deal stage" |
| **Walkthroughs** | Step-by-step guides | Onboarding tour |

### **Programmatic (Code-Based) Components**
| Component | Best For | Example |
|-----------|----------|---------|
| **Welcome Mat** | First-time login intro | "Start here" resources |
| **Popovers** | Contextual tips | "Click here to pin a list" |
| **Empty State** | Guide for blank sections | "No tasks? Create one!" |

---

## **3. Push vs. Pull Methods**
- **Push Method**: Proactively show guidance (e.g., prompts, welcome mats).  
- **Pull Method**: Let users seek help (e.g., hover tooltips, help menus).  

**Best Practice**: Use both! Push for critical info, pull for optional help.

---

## **4. Creating Prompts**
Prompts are pop-up messages that highlight features or updates.

### **Types of Prompts**
| Type | Use Case | Example |
|------|----------|---------|
| **Floating** | Short, non-intrusive tips | "Pin your favorite list views!" |
| **Targeted** | Points to a specific element | "Click here to log a call" |
| **Docked** | Stays visible for reference | Embedded video tutorial |

### **How to Create a Prompt**
1. Go to **Setup** → **In-App Guidance**.  
2. Click **Add** → Choose prompt type.  
3. Customize:  
   - **Title/Message**: Clear, concise text.  
   - **Buttons**: "Got It" (dismiss) or "Learn More" (action).  
4. Set display rules (e.g., show for Sales profiles only).  

---

## **5. Designing a User Engagement Journey**
### **The "Aha Moment"**
The goal is to make users realize the value of a feature instantly.  
**Example**: A prompt showing how *Path* visualizes deal stages.  

### **MAP Framework**
- **Message**: What you’re communicating.  
- **Audience**: Who needs it (e.g., new hires vs. admins).  
- **Purpose**: Why it matters (e.g., faster data entry).  

### **FACE Principles for Content**
- **Friendly**: Warm, approachable tone.  
- **Accurate**: Trustworthy information.  
- **Concise**: Short and scannable.  
- **Educational**: Teaches a skill.  

### **Storyboarding**
Sketch the user’s journey:  
1. **Onboarding**: Welcome mat → Quick setup guide.  
2. **Feature Adoption**: Prompt → Walkthrough.  
3. **Deeper Learning**: Links to Trailhead modules.  

---

## **6. Tracking Engagement**
Monitor success with:  
- **Views**: How many users saw the prompt.  
- **Completes**: % who clicked "Learn More".  
- **Custom Reports**: Use the *Prompt Actions* object.  

**Tip**: Refine prompts based on metrics (e.g., fewer steps = higher completion).


////DAY 7
# **Core Concepts of Lightning Reports and Dashboards**

## **1. Understanding Reports and Dashboards**
### **Why Reports and Dashboards?**
- Businesses use reports and dashboards to answer critical questions using Salesforce data.
- Reports provide structured data analysis, while dashboards visualize key metrics.
- Example business questions:
  - Which products are top sellers?
  - Who are the highest-value prospects?
  - Which marketing campaigns are most successful?

### **Phrasing Business Needs as Reporting Questions**
- **Example:**  
  - **Original Question:** "Which products are top sellers?"  
  - **Follow-up Questions:**  
    - Revenue or quantity-based?  
    - Grouped by product family?  
    - Date range?  
    - Include inactive products?  
  - **Final Criteria:**  
    - Report Type: Opportunities with Products  
    - Format: Summary  
    - Grouping: Product Family  
    - Filters: Active products, Closed Won opportunities  

---

## **2. What is a Report?**
- A **report** is a structured list of records that meet defined criteria.
- **Key Features:**
  - Filter, group, and perform calculations.
  - Display data in charts.
  - Stored in folders with access controls.
- **Example Use Case:**  
  - Filtering Closed Won opportunities to show top-selling products.

### **Report Types**
- A **report type** defines which objects and fields are available.
- **Standard Report Types:** Predefined (e.g., Accounts, Leads).
- **Custom Report Types:** Created to include specific objects/fields (e.g., "Leads with Activities").
- **Primary vs. Related Objects:**  
  - Primary: Main object (e.g., Leads).  
  - Related: Connected objects (e.g., Activities).  

---

## **3. What is a Dashboard?**
- A **dashboard** is a visual display of key metrics from reports.
- **Components:**
  - **Widgets:** Charts, tables, metrics, gauges.
  - **Source Reports:** Each widget pulls data from one report.
- **Types of Dashboards:**
  - **Static:** Data visibility based on a single running user.
  - **Dynamic:** Data adjusts based on the logged-in user’s permissions.

### **Dashboard Builder Features**
- **Widget Types:**  
  - **Charts** (Bar, Line, Pie, Scatter).  
  - **Tables** (Lightning, Legacy).  
  - **Metrics** (Single value display).  
  - **Gauges** (Value within a range).  
- **Filtering:** Apply dashboard filters for interactive data exploration.

---

## **4. Organizing Reports and Dashboards**
- **Folders:**  
  - **Public, Hidden, or Shared.**  
  - Control access via roles, permissions, or groups.  
- **Best Practices:**  
  - Store related reports/dashboards in the same folder.  
  - Use dynamic dashboards for role-based visibility.  

---

## **5. Creating Reports with the Report Builder**
### **Steps to Create a Report**
1. **Select a Report Type** (e.g., Accounts, Opportunities).  
2. **Apply Filters:**  
   - **Standard Filters** (e.g., "Show Me: My Accounts").  
   - **Field Filters** (e.g., "Type = Customer - Direct").  
   - **Cross Filters** (e.g., "Accounts with Opportunities").  
   - **Filter Logic** (e.g., "1 OR 2").  
3. **Format the Report:**  
   - **Tabular** (Simple list).  
   - **Summary** (Grouped with subtotals).  
   - **Matrix** (Row + Column grouping).  
4. **Save & Run.**  

### **Key Report Features**
- **Outline Tab:** Group data (for Summary/Matrix reports).  
- **Filters Tab:** Apply conditions.  
- **Fields Panel:** Drag & drop fields into the report.  

---

## **6. Filtering Reports**
### **Types of Filters**
| Filter Type | Description | Example |
|------------|------------|---------|
| **Standard Filter** | Predefined filters (e.g., date range). | "Created Date: Last Month" |
| **Field Filter** | Custom filters on fields. | "Stage = Closed Won" |
| **Cross Filter** | Filter by related objects. | "Accounts WITH Opportunities" |
| **Row Limit** | Restrict rows in tabular reports. | "Show top 10 by Amount" |
| **Filter Logic** | Combine filters (AND/OR/NOT). | "(1 OR 2) AND 3" |

### **Locking Filters**
- Prevents users from changing filter values on the report run page.

---

## **7. Report Formats**
| Format | Best For | Supports Charts? | Supports Dashboards? |
|--------|----------|------------------|----------------------|
| **Tabular** | Simple lists (e.g., mailing lists). | ❌ | ✅ (with row limit) |
| **Summary** | Grouped data with subtotals. | ✅ | ✅ |
| **Matrix** | Row + column summaries (e.g., revenue trends). | ✅ | ✅ |

### **Examples**
1. **Tabular Report:** List of Open Opportunities.  
2. **Summary Report:** Cases grouped by Priority.  
3. **Matrix Report:** Revenue by Product & Region.  

---

## **8. Creating Dashboards**
### **Steps to Build a Dashboard**
1. **Create a Source Report** (e.g., Leads by Lead Source).  
2. **Open Dashboard Builder** → **New Dashboard**.  
3. **Add Widgets** (Chart, Table, Metric, Gauge).  
4. **Customize Layout** (Drag & resize widgets).  
5. **Save & Share.**  

### **Dynamic Dashboards**
- **Benefits:**  
  - Each user sees data based on their permissions.  
  - Reduces the need for multiple dashboards.  
- **Setup:**  
  - Set "View Dashboard As: The dashboard viewer."  

### **Report Charts**
- Alternative to dashboards: Add a chart directly to a report.  

---

## **9. Key Takeaways**
- **Reports** = Data analysis (filter, group, calculate).  
- **Dashboards** = Visual summaries (charts, tables, metrics).  
- **Best Practices:**  
  - Use **Summary** reports for most cases.  
  - Use **Matrix** for complex comparisons.  
  - **Dynamic dashboards** for role-based visibility.  
